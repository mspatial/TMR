SELECT
    row_number() OVER ()::integer AS objectid,
    segs.service_uid,
    segs.service_no,
    segs.service_description,
    segs.terminus,
    segs.measure_date,
    segs.measure_officer,
    segs.additional_distance_km,
    segs.pml_notes,
    segs.public_name,
    segs.operator_no,
    segs.base_school,
    segs.other_school,
    segs.schedule_uid, 
    segs.schedule_name,
    segs.service_type, 
    segs.schedule_description, 
    segs.express_running_description, 
	segs.segment_uid,
    segs.segment_label_from,
    segs.segment_label_to,
    segs.segment_type,
    segs.distance_km,
    segs.segment_description,
    segs.carriage_type,
    segs.years_carried,
	segs.segment_sequence,
    st_union(segs.shape) AS shape,
	st_length(st_union(segs.shape)) AS length_m
FROM (SELECT 
    svc.service_uid,
    svc.service_no,
    svc.description AS service_description,
    svc.terminus,
    svc.measure_date,
    svc.measure_officer,
    svc.additional_distance_km,
    svc.pml_notes,
    op.public_name,
    op.operator_no,
    bsch.school_name AS base_school,
    osch.school_name AS other_school,
    schds.schedule_uid, 
    schds.schedule_name,
    schds.service_type, 
    schds.schedule_description, 
    schds.express_running_description, 
	seg.segment_uid,
    seg.segment_label_from,
    seg.segment_label_to,
    seg.segment_type,
    seg.distance_km,
    seg.description AS segment_description,
    seg.carriage_type,
    seg.years_carried,
	schds.segment_sequence,
    lnk.shape
    FROM services svc
        LEFT JOIN operators op ON svc.service_no::text = op.route::text
        LEFT JOIN (SELECT service_uid, school_type, school_name FROM service_schools WHERE school_type::text='Base School') bsch on svc.service_uid::text = bsch.service_uid::text 
        LEFT JOIN (SELECT service_uid, school_type, school_name FROM service_schools WHERE school_type::text='Other School') osch on svc.service_uid::text = osch.service_uid::text 
		LEFT JOIN segments seg ON svc.service_uid::text = seg.service_uid::text
        LEFT JOIN (
                SELECT 
				sss.service_uid,
				sss.segment_uid,
				sss.schedule_uid, 
                schs.schedule_name,
                schs.service_type, 
                schs.description AS schedule_description, 
                schs.express_running_description,
				sss.segment_sequence
                FROM service_schedule_segments sss
                 LEFT JOIN schedules schs ON schs.schedule_uid::text = sss.schedule_uid) schds ON svc.service_uid::text = schds.service_uid AND seg.segment_uid = schds.segment_uid
        LEFT JOIN links lnk ON seg.segment_uid::text = lnk.segment_uid::text) segs
WHERE segs.shape IS NOT NULL
GROUP BY 
    segs.service_uid,
    segs.service_no,
    segs.service_description,
    segs.terminus,
    segs.measure_date,
    segs.measure_officer,
    segs.additional_distance_km,
    segs.pml_notes,
    segs.public_name,
    segs.operator_no,
    segs.base_school,
    segs.other_school,
    segs.schedule_uid, 
    segs.schedule_name,
    segs.service_type, 
    segs.schedule_description, 
    segs.express_running_description, 
	segs.segment_uid,
    segs.segment_label_from,
    segs.segment_label_to,
    segs.segment_type,
    segs.distance_km,
    segs.segment_description,
    segs.carriage_type,
    segs.years_carried,
	segs.segment_sequence
ORDER BY
	segs.service_no,
	segs.schedule_name,
	segs.segment_sequence,
	segs.segment_label_from